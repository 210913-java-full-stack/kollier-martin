-- This script creates the tables within the database

# DB Tables Needed
# CUSTOMERS (FIRST_NAME, LAST_NAME, ACCOUNT_ID, CUSTOMER_ID) : A customer can have multiple ACCOUNT_IDs tied to them, but only one CUSTOMER_ID
# ACCOUNTS (CUSTOMER_ID, ACCOUNT_ID, BALANCE) : A customer can have multiple accounts, but the ACCOUNT_IDs must be different
# AC_JUNCTION (JUNCTION_ID, ACCOUNT_ID, CUSTOMER_ID) : A junction table that ties CUSTOMERS and ACCOUNTS together
# USERNAME is still... hmm. Maybe I'll use it

USE Project0;

DROP TABLE IF EXISTS USERINFO;
DROP TABLE IF EXISTS ACCOUNTS;
DROP TABLE IF EXISTS CUSTOMERS;
DROP TABLE IF EXISTS AC_JUNCTION;

CREATE TABLE AC_JUNCTION 
(
	JUNCTION_ID INT NOT NULL AUTO_INCREMENT,
	ACCOUNT_ID 	INT NOT NULL ,
	CUSTOMER_ID INT NOT NULL,
	INDEX (ACCOUNT_ID),
	INDEX (CUSTOMER_ID),
	CONSTRAINT AC_PK PRIMARY KEY (JUNCTION_ID)
);

CREATE TABLE ACCOUNTS 
(
	ACCOUNT_ID INT NOT NULL AUTO_INCREMENT,
	BALANCE INT NOT NULL,
	CONSTRAINT ACCOUNTS_PK PRIMARY KEY (ACCOUNT_ID),
	CONSTRAINT AJUNC_FK FOREIGN KEY (ACCOUNT_ID) REFERENCES AC_JUNCTION(ACCOUNT_ID)
);

CREATE TABLE CUSTOMERS
(
    CUSTOMER_ID 	INT NOT NULL,
    ACCOUNT_ID 		INT NOT NULL,
    LAST_NAME		VARCHAR(30),
    FIRST_NAME		VARCHAR(30),
    CONSTRAINT CUSTOMER_PK PRIMARY KEY (CUSTOMER_ID), 
    CONSTRAINT CJUNC_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES AC_JUNCTION(CUSTOMER_ID) 
);

CREATE TABLE USERINFO 
(
	USER_ID VARCHAR(30) NOT NULL,
	PASSDWORD VARCHAR(30) NOT NULL,
	CUSTOMER_ID INT NOT NULL,
	CONSTRAINT USERNAME_PK PRIMARY KEY (USER_ID),
	CONSTRAINT USERNAME_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

/* PASSWORD TABLE */

ALTER TABLE ACCOUNTS AUTO_INCREMENT=100;